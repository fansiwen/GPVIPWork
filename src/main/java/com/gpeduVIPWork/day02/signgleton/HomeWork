课后作业
作业内容
1、熟练掌握单例模式的常见写法。
    详见代码
2、总结每种单例写法的优、缺点。
    （1）饿汉式：
        优点：效率较高，用户体验更好。
        缺点：类加载的时候就初始化了，容易造成资源浪费。
    （2）懒汉式（非线程安全）
        优点：需要使用的时候才去new对象。
        缺点：不能保证线程安全。
    （3）懒汉式（synchronized类锁）
        优点：保证了线程的安全性。
        缺点：由于是在静态方法上加锁，会导致类被锁，效率很低。
    （4）懒汉式（双重检查）
        优点：保证了线程安全，是在内部方法使用synchronized关键字，不会造成类被锁，效率得到提升。
        缺点：还是用到了synchronized关键字，如果对象数量多，线程阻塞也会效率很低。
    （5）懒汉式（静态内部类）
        优点：既没有饿汉式的内存浪费，也不会考虑synchronized带来的性能下降。由于内部类是在被调用的时候才会去加载，所以也
        巧妙的避免的线程安全问题。
        缺点：容易被反射机制或者通过序列化、反序列化破坏单例
    （6）注册式单例（枚举式）
        优点：线程安全，不能被反射攻击，也不会受到反序列化的影像而破坏单例。是《Effective Java》推荐的单例实现模式。
    （7）注册式单例（容器式）
        优点：适用于创建实例非常多的场景，便于管理。
        缺点：但是他是非线程安全的，要增加双层锁机制。性能会受到影响。
    （8）线程单例
        优点：只能保证线程中是单例的。
        缺点：不能保证全局唯一。
3、思考破坏单例模式的方式有哪些？并且归纳总结。
    （1）利用反射机制破坏单例。代码-->InvokeDestoryTest
    （2）利用序列化反序列化破坏单例。代码-->InvokeDestoryTest2
4、梳理内部类的执行逻辑，并画出时序图。
    内部类是一个单独的class文件，只有被调用的时候才会去加载。
提交地址
https://gper.gupaoedu.com/articleContent?id=657



